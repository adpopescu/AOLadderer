<Application x:Class="AOLadderer.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:converters="clr-namespace:AOLadderer.UI.Converters"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             StartupUri="Views/MainView.xaml">
  <Application.Resources>
    <converters:BoolToNegationConverter x:Key="BoolToNegationConverter"/>
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <Color x:Key="LightBlueColor">#73CBD3</Color>
    <SolidColorBrush x:Key="LightBlueBrush" Color="{StaticResource LightBlueColor}" po:Freeze="True"/>
    <SolidColorBrush x:Key="LightBlueBrush50" Color="{StaticResource LightBlueColor}" Opacity=".50" po:Freeze="True"/>

    <Color x:Key="LightMiddleBlueColor">#569FAB</Color>
    <SolidColorBrush x:Key="LightMiddleBlueBrush" Color="{StaticResource LightMiddleBlueColor}" po:Freeze="True"/>

    <Color x:Key="MiddleBlueColor">#297085</Color>
    <SolidColorBrush x:Key="MiddleBlueBrush" Color="{StaticResource MiddleBlueColor}" po:Freeze="True"/>

    <Color x:Key="MiddleDarkBlueColor">#305255</Color>
    <SolidColorBrush x:Key="MiddleDarkBlueBrush" Color="{StaticResource MiddleDarkBlueColor}" po:Freeze="True"/>

    <Color x:Key="DarkBlueColor">#0C1E2F</Color>
    <SolidColorBrush x:Key="DarkBlueBrush" Color="{StaticResource DarkBlueColor}" po:Freeze="True"/>
    <SolidColorBrush x:Key="DarkBlueBrush85" Color="{StaticResource DarkBlueColor}" Opacity=".85" po:Freeze="True"/>
    <SolidColorBrush x:Key="DarkBlueBrush20" Color="{StaticResource DarkBlueColor}" Opacity=".20" po:Freeze="True"/>
    <SolidColorBrush x:Key="DarkBlueBrush15" Color="{StaticResource DarkBlueColor}" Opacity=".15" po:Freeze="True"/>

    <Color x:Key="BorderGrayColor">#9C9C9C</Color>
    <SolidColorBrush x:Key="BorderGrayBrush" Color="{StaticResource BorderGrayColor}" po:Freeze="True"/>

    <SolidColorBrush x:Key="Black40" Color="Black" Opacity=".40" po:Freeze="True"/>
    <SolidColorBrush x:Key="Black60" Color="Black" Opacity=".60" po:Freeze="True"/>

    <!-- Setting this implicitly doesn't seem to work. -->
    <Style TargetType="Window" x:Key="WindowStyle">
      <Setter Property="WindowStyle" Value="None"/>
      <Setter Property="UseLayoutRounding" Value="True"/>
      <Setter Property="AllowsTransparency" Value="True"/>
      <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
      <Setter Property="FontFamily" Value="Verdana"/>
    </Style>

    <LinearGradientBrush x:Key="EnabledButtonBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource LightBlueColor}" Offset="0"/>
      <GradientStop Color="{StaticResource MiddleBlueColor}" Offset=".06"/>
      <GradientStop Color="Black" Offset=".45"/>
      <GradientStop Color="{StaticResource LightMiddleBlueColor}" Offset="4"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DisabledButtonBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource MiddleBlueColor}" Offset="0"/>
      <GradientStop Color="{StaticResource MiddleDarkBlueColor}" Offset=".06"/>
      <GradientStop Color="Black" Offset=".45"/>
      <GradientStop Color="{StaticResource MiddleBlueColor}" Offset="4"/>
    </LinearGradientBrush>

    <Style TargetType="Button">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <ControlTemplate x:Key="TextButtonControlTemplate" TargetType="{x:Type Button}">
      <Border x:Name="border" SnapsToDevicePixels="True"
              CornerRadius="10" Background="{StaticResource EnabledButtonBrush}"
              BorderBrush="{StaticResource MiddleBlueBrush}" BorderThickness="1">
        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Background" TargetName="border">
            <Setter.Value>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="{StaticResource LightBlueColor}" Offset="0"/>
                <GradientStop Color="{StaticResource MiddleBlueColor}" Offset=".2"/>
                <GradientStop Color="Black" Offset=".55"/>
                <GradientStop Color="{StaticResource LightMiddleBlueColor}" Offset="2"/>
              </LinearGradientBrush>
            </Setter.Value>
          </Setter>
          <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Setter Property="Background" TargetName="border">
            <Setter.Value>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="{StaticResource LightBlueColor}" Offset="0"/>
                <GradientStop Color="{StaticResource MiddleBlueColor}" Offset=".3"/>
                <GradientStop Color="Black" Offset=".6"/>
                <GradientStop Color="{StaticResource LightMiddleBlueColor}" Offset="1.2"/>
              </LinearGradientBrush>
            </Setter.Value>
          </Setter>
          <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightMiddleBlueBrush}"/>
        </Trigger>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledButtonBrush}"/>
          <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MiddleDarkBlueBrush}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Button" x:Key="TextButtonStyle">
      <Setter Property="Template" Value="{StaticResource TextButtonControlTemplate}"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="MinWidth" Value="100"/>
      <Setter Property="MinHeight" Value="20"/>
      <Setter Property="Width" Value="Auto"/>
      <Setter Property="Height" Value="Auto"/>
    </Style>

    <Style TargetType="fa:ImageAwesome">
      <Setter Property="Foreground" Value="{StaticResource LightBlueBrush}"/>
      <Setter Property="Margin" Value="1"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="WhiteTextBlockStyle">
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="Effect">
        <Setter.Value>
          <DropShadowEffect BlurRadius="1" ShadowDepth="1"/>
        </Setter.Value>
      </Setter>
    </Style>

    <ControlTemplate x:Key="TextBoxControlTemplate" TargetType="{x:Type TextBox}">
      <Border x:Name="border" BorderThickness="1" SnapsToDevicePixels="True"
              BorderBrush="{StaticResource MiddleBlueBrush}" CornerRadius="6"
              Background="{StaticResource DarkBlueBrush}"
              Padding="1 0 1 0">
        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
      </Border>
      <!-- AO doesn't have IsMouseOver and IsKeyboardFocused border highlights, so I'm leaving them out. -->
      <ControlTemplate.Triggers>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Background" TargetName="border">
            <Setter.Value>
              <SolidColorBrush Color="Gray" Opacity=".4"/>
            </Setter.Value>
          </Setter>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TextBox">
      <Setter Property="Template" Value="{StaticResource TextBoxControlTemplate}"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="CaretBrush" Value="White"/>
    </Style>

    <Style TargetType="ToolTip">
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="Background" Value="{StaticResource DarkBlueBrush85}"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="FontFamily" Value="Verdana"/>
      <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <LinearGradientBrush x:Key="TabItem.Static.Background" StartPoint="0,0" EndPoint="0,1" >
      <GradientStop Color="{StaticResource LightBlueColor}" Offset="0"/>
      <GradientStop Color="{StaticResource MiddleBlueColor}" Offset=".06"/>
      <GradientStop Color="Black" Offset=".45"/>
      <GradientStop Color="{StaticResource LightMiddleBlueColor}" Offset="4"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.Static.Border" Color="Transparent"/>
    <LinearGradientBrush x:Key="TabItem.MouseOverOrSelected.Background" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource LightBlueColor}" Offset="0"/>
      <GradientStop Color="{StaticResource MiddleBlueColor}" Offset=".3"/>
      <GradientStop Color="Black" Offset=".55"/>
      <GradientStop Color="{StaticResource DarkBlueColor}" Offset=".8"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.MouseOverOrSelected.Border" Color="{StaticResource LightBlueColor}"/>
    <Style TargetType="{x:Type TabItem}">
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="Padding" Value="6,2,6,2"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TabItem}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
              <Border x:Name="mainBorder" CornerRadius="5 5 0 0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                <Border x:Name="innerBorder" CornerRadius="5 5 0 0" BorderBrush="{StaticResource TabItem.MouseOverOrSelected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.MouseOverOrSelected.Background}" Margin="-1" Opacity="0"/>
              </Border>
              <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            </Grid>
            <ControlTemplate.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOverOrSelected.Background}"/>
                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOverOrSelected.Border}"/>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOverOrSelected.Background}"/>
                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOverOrSelected.Border}"/>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOverOrSelected.Background}"/>
                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOverOrSelected.Border}"/>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOverOrSelected.Background}"/>
                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOverOrSelected.Border}"/>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1"/>
                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1"/>
                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1"/>
                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1"/>
                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
              </MultiDataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxControlTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
          <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <Border x:Name="DropDownBorder" Background="{StaticResource DarkBlueBrush}"
                    BorderBrush="{StaticResource LightBlueBrush}" BorderThickness="1">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
          <ToggleButton.Style>
            <Style TargetType="{x:Type ToggleButton}">
              <Setter Property="OverridesDefaultStyle" Value="True"/>
              <Setter Property="IsTabStop" Value="False"/>
              <Setter Property="Focusable" Value="False"/>
              <Setter Property="ClickMode" Value="Press"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"  SnapsToDevicePixels="True"
                            CornerRadius="6" Background="{StaticResource EnabledButtonBrush}"
                            BorderBrush="{StaticResource MiddleBlueBrush}" BorderThickness="1">
                      <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="{StaticResource LightBlueBrush}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                      </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource LightBlueBrush}"/>
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Fill" TargetName="Arrow" Value="Gray"/>
                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource DisabledButtonBrush}"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MiddleDarkBlueBrush}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </ToggleButton.Style>
        </ToggleButton>
        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
          <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
          <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
        </Trigger>
        <Trigger Property="HasItems" Value="False">
          <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsGrouping" Value="True"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        </MultiTrigger>
        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
          <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
          <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ComboBox">
      <Setter Property="Template" Value="{StaticResource ComboBoxControlTemplate}"/>
    </Style>

    <ControlTemplate x:Key="ComboBoxItemControlTemplate" TargetType="{x:Type ComboBoxItem}">
      <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"
              BorderBrush="Transparent" BorderThickness="1">
        <ContentPresenter TextBlock.Foreground="White" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
      </Border>
      <ControlTemplate.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsSelected" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="Background" TargetName="border" Value="{StaticResource MiddleBlueBrush}"/>
          <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsSelected" Value="False"/>
            <Condition Property="IsMouseOver" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="Background" TargetName="border" Value="{StaticResource DarkBlueBrush}"/>
          <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsSelected" Value="False"/>
            <Condition Property="IsKeyboardFocused" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="Background" TargetName="border" Value="{StaticResource MiddleBlueBrush}"/>
          <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
        </MultiTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ComboBoxItem">
      <Setter Property="Template" Value="{StaticResource ComboBoxItemControlTemplate}"/>
    </Style>

    <ControlTemplate x:Key="ListViewItemControlTemplate" TargetType="ListViewItem">
      <Grid>
        <Border x:Name="border" BorderBrush="Transparent" BorderThickness="1" Background="{TemplateBinding Background}">
          <GridViewRowPresenter Content="{TemplateBinding Content}" Columns="{TemplateBinding GridView.ColumnCollection}"/>
        </Border>
        <Rectangle Name="HighlightRectangle" IsHitTestVisible="False"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                   Fill="Transparent"/>
      </Grid>
      <ControlTemplate.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsSelected" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsSelected" Value="False"/>
            <Condition Property="IsMouseOver" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
        </MultiTrigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsSelected" Value="False"/>
            <Condition Property="IsKeyboardFocused" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
        </MultiTrigger>
        <DataTrigger Binding="{Binding IsChecked}" Value="True">
          <Setter TargetName="HighlightRectangle" Property="Fill" Value="#40FFFFFF"/>
        </DataTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ListViewItem">
      <Setter Property="Template" Value="{StaticResource ListViewItemControlTemplate}"/>
      <Setter Property="Height" Value="22"/>
      <Style.Triggers>
        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
          <Setter Property="Background" Value="{StaticResource DarkBlueBrush}"/>
        </Trigger>
        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
          <Setter Property="Background" Value="#122D47"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="ListView">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}"/>
      <Setter Property="AlternationCount" Value="2"/>
    </Style>

    <ControlTemplate x:Key="GridViewColumnHeaderControlTemplate" TargetType="{x:Type GridViewColumnHeader}">
      <Grid SnapsToDevicePixels="true">
        <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="7"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
            <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
              <ContentPresenter x:Name="HeaderContent" TextBlock.Foreground="White" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
          </Grid>
        </Border>
        <Border x:Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
        <Border x:Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
        <Canvas>
          <Thumb x:Name="PART_HeaderGripper">
            <Thumb.Style>
              <Style TargetType="Thumb">
                <Setter Property="Canvas.Right" Value="-9"/>
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Background" Value="{StaticResource LightBlueBrush}"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                      <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"/>
                      </Border>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Thumb.Style>
          </Thumb>
        </Canvas>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="Height" Value="Auto">
          <Setter Property="MinHeight" Value="20"/>
        </Trigger>
        <Trigger Property="IsEnabled" Value="false">
          <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
      <Setter Property="Template" Value="{StaticResource GridViewColumnHeaderControlTemplate}"/>
      <Setter Property="Background" Value="{StaticResource DisabledButtonBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource MiddleBlueBrush}"/>
    </Style>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border x:Name="border" SnapsToDevicePixels="true" Background="{StaticResource DarkBlueBrush}">
              <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Rectangle x:Name="rectangle" Fill="{StaticResource LightBlueBrush}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Rectangle x:Name="rectangle" Fill="{StaticResource LightBlueBrush}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <ControlTemplate x:Key="ScrollBarControlTemplate" TargetType="{x:Type ScrollBar}">
      <Grid x:Name="Bg" SnapsToDevicePixels="true">
        <Grid.RowDefinitions>
          <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
          <RowDefinition Height="0.00001*"/>
          <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
        </Grid.RowDefinitions>
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
        <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
          <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Margin="3,4,3,3" Stretch="Uniform"
                Fill="{StaticResource LightBlueBrush}"/>
        </RepeatButton>
        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
          <Track.DecreaseRepeatButton>
            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
          </Track.DecreaseRepeatButton>
          <Track.IncreaseRepeatButton>
            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
          </Track.IncreaseRepeatButton>
          <Track.Thumb>
            <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
          </Track.Thumb>
        </Track>
        <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
          <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Margin="3,4,3,3" Stretch="Uniform"
                Fill="{StaticResource LightBlueBrush}"/>
        </RepeatButton>
      </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}">
      <Setter Property="Template" Value="{StaticResource ScrollBarControlTemplate}"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1,0"/>
      <Setter Property="Background" Value="{StaticResource DarkBlueBrush}"/>
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Style.Triggers>
        <Trigger Property="Orientation" Value="Horizontal">
          <Setter Property="Width" Value="Auto"/>
          <Setter Property="MinWidth" Value="0"/>
          <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
          <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
          <Setter Property="BorderThickness" Value="0,1"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ScrollBar}">
                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                  </Grid.ColumnDefinitions>
                  <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                  <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                    <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Margin="3" Stretch="Uniform"
                          Fill="{StaticResource LightBlueBrush}"/>
                  </RepeatButton>
                  <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                    </Track.Thumb>
                  </Track>
                  <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                    <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Margin="3" Stretch="Uniform"
                          Fill="{StaticResource LightBlueBrush}"/>
                  </RepeatButton>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
  </Application.Resources>
</Application>
